{
  "questions": [
    {
      "id": 1,
      "text": "What keyword is used to declare a variable in JavaScript?",
      "options": [
        { "id": "A", "text": "var", "isCorrect": true },
        { "id": "B", "text": "function", "isCorrect": false },
        { "id": "C", "text": "class", "isCorrect": false },
        { "id": "D", "text": "return", "isCorrect": false }
      ],
      "prize": 500
    },
    {
      "id": 2,
      "text": "Which symbol is used for single-line comments in JavaScript?",
      "options": [
        { "id": "A", "text": "#", "isCorrect": false },
        { "id": "B", "text": "//", "isCorrect": true },
        { "id": "C", "text": "/*", "isCorrect": false },
        { "id": "D", "text": "--", "isCorrect": false }
      ],
      "prize": 1000
    },
    {
      "id": 3,
      "text": "What does 'NaN' stand for in JavaScript?",
      "options": [
        { "id": "A", "text": "Not a Number", "isCorrect": true },
        { "id": "B", "text": "New and Null", "isCorrect": false },
        { "id": "C", "text": "No Assignment Now", "isCorrect": false },
        { "id": "D", "text": "Negative and Neutral", "isCorrect": false }
      ],
      "prize": 2000
    },
    {
      "id": 4,
      "text": "How do you create a function in JavaScript?",
      "options": [
        { "id": "A", "text": "function myFunc() {}", "isCorrect": true },
        { "id": "B", "text": "func myFunc() {}", "isCorrect": false },
        { "id": "C", "text": "def myFunc() {}", "isCorrect": false },
        { "id": "D", "text": "create myFunc() {}", "isCorrect": false }
      ],
      "prize": 4000
    },
    {
      "id": 5,
      "text": "What is the main purpose of React?",
      "options": [
        { "id": "A", "text": "Building user interfaces", "isCorrect": true },
        { "id": "B", "text": "Managing databases", "isCorrect": false },
        { "id": "C", "text": "Handling server-side logic", "isCorrect": false },
        { "id": "D", "text": "Styling web pages", "isCorrect": false }
      ],
      "prize": 8000
    },
    {
      "id": 6,
      "text": "Which hook is used to manage state in a React functional component?",
      "options": [
        { "id": "A", "text": "useEffect", "isCorrect": false },
        { "id": "B", "text": "useState", "isCorrect": true },
        { "id": "C", "text": "useContext", "isCorrect": false },
        { "id": "D", "text": "useReducer", "isCorrect": false }
      ],
      "prize": 16000
    },
    {
      "id": 7,
      "text": "What does the 'map' method do in JavaScript?",
      "options": [
        { "id": "A", "text": "Creates a new array with transformed elements", "isCorrect": true },
        { "id": "B", "text": "Removes elements from an array", "isCorrect": false },
        { "id": "C", "text": "Sorts an array", "isCorrect": false },
        { "id": "D", "text": "Filters an array", "isCorrect": false }
      ],
      "prize": 32000
    },
    {
      "id": 8,
      "text": "In React, what is a prop?",
      "options": [
        { "id": "A", "text": "A way to pass data to components", "isCorrect": true },
        { "id": "B", "text": "A built-in state management tool", "isCorrect": false },
        { "id": "C", "text": "A method to update the DOM", "isCorrect": false },
        { "id": "D", "text": "A type of event listener", "isCorrect": false }
      ],
      "prize": 64000
    },
    {
      "id": 9,
      "text": "What is the difference between 'let' and 'const' in JavaScript?",
      "options": [
        { "id": "A", "text": "'let' allows reassignment, 'const' does not", "isCorrect": true },
        { "id": "B", "text": "'const' is for functions, 'let' is for variables", "isCorrect": false },
        { "id": "C", "text": "'let' is block-scoped, 'const' is global", "isCorrect": false },
        { "id": "D", "text": "'const' allows reassignment, 'let' does not", "isCorrect": false }
      ],
      "prize": 125000
    },
    {
      "id": 10,
      "text": "What is the purpose of 'useEffect' in React?",
      "options": [
        { "id": "A", "text": "To handle side effects in functional components", "isCorrect": true },
        { "id": "B", "text": "To define component props", "isCorrect": false },
        { "id": "C", "text": "To create reusable components", "isCorrect": false },
        { "id": "D", "text": "To manage routing", "isCorrect": false }
      ],
      "prize": 250000
    },
    {
      "id": 11,
      "text": "What is a closure in JavaScript?",
      "options": [
        { "id": "A", "text": "A function with access to its outer scope variables", "isCorrect": true },
        { "id": "B", "text": "A way to close a component", "isCorrect": false },
        { "id": "C", "text": "A method to terminate a loop", "isCorrect": false },
        { "id": "D", "text": "A type of React hook", "isCorrect": false }
      ],
      "prize": 500000
    },
    {
      "id": 12,
      "text": "What is the Virtual DOM in React?",
      "options": [
        { "id": "A", "text": "A lightweight copy of the actual DOM for efficient updates", "isCorrect": true },
        { "id": "B", "text": "A database for storing component state", "isCorrect": false },
        { "id": "C", "text": "A tool for debugging React components", "isCorrect": false },
        { "id": "D", "text": "A way to render components on the server", "isCorrect": false }
      ],
      "prize": 1000000
    }
  ],
  "totalQuestions": 12,
  "prizeLevels": [1000000, 500000, 250000, 125000, 64000, 32000, 16000, 8000, 4000, 2000, 1000, 500]
}